/*
Size Content to The Viewport
Users are used to scroll websites vertically on both desktop and mobile devices - but not horizontally!

So, if the user is forced to scroll horizontally, or zoom out, to see the whole web page it results in a poor user experience.

Some additional rules to follow:

1. Do NOT use large fixed width elements - For example, if an image is displayed at a width wider than the viewport it can cause the viewport to scroll horizontally. Remember to adjust this content to fit within the width of the viewport.

2. Do NOT let the content rely on a particular viewport width to render well - Since screen dimensions and width in CSS pixels vary widely between devices, content should not rely on a particular viewport width to render well.

3. Use CSS media queries to apply different styling for small and large screens - Setting large absolute CSS widths for page elements will cause the element to be too wide for the viewport on a smaller device. Instead, consider using relative width values, such as width: 100%. Also, be careful of using large absolute positioning values. It may cause the element to fall outside the viewport on small devices.
*/


/* 
Extra small devices (phones, 600px and down)
@media only screen and (max-width: 600px) {...}

Small devices (portrait tablets and large phones, 600px and up)
@media only screen and (min-width: 600px) {...}

Medium devices (landscape tablets, 768px and up)
@media only screen and (min-width: 768px) {...}

Large devices (laptops/desktops, 992px and up)
@media only screen and (min-width: 992px) {...}

Extra large devices (large laptops and desktops, 1200px and up)
@media only screen and (min-width: 1200px) {...}
*/

.calculator {
    display: flex;
    flex-direction: column;
    height: 750px;
    width: 25%;
    border: 2px solid fuchsia;
}

.screen {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 150px;
    border: 5px ridge yellowgreen;
    text-align: center;
    margin: 10px;
}

.keypad {
    display: flex;
    flex-direction: column;
    height: 650px;
    border: 5px double blueviolet;
    margin: 10px;
}

#division, #multiplication, #subtraction, #addition, #six, #seven, #eight,
#nine, #two, #three, #four, #five, #zero, #one, #dot, #equals, #clear,
#backspace {
    display: flex;
    height: 110px;
    border: 1px solid brown;
    flex: 1 0 0;
    margin: 5px;
    justify-content: center;
    align-items: center;
    font-size: 50px;
    background-color: darksalmon;
}

.first-row, .second-row, .third-row, .fourth-row, .fifth-row {
    display: flex;
    justify-content: space-between;
}